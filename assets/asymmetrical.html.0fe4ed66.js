import{e as n}from"./app.d1ef40ff.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";var a="/assets/img/algorithms/digital-signature.png";const p={},t=n('<h1 id="\u975E\u5BF9\u79F0\u52A0\u5BC6" tabindex="-1"><a class="header-anchor" href="#\u975E\u5BF9\u79F0\u52A0\u5BC6" aria-hidden="true">#</a> \u975E\u5BF9\u79F0\u52A0\u5BC6</h1><p>\u4E0E\u5BF9\u79F0\u52A0\u5BC6\u4E0D\u540C\u7684\u662F\uFF0C\u975E\u5BF9\u79F0\u52A0\u5BC6\u9700\u8981\u4E24\u628A\u5BC6\u94A5\uFF08\u516C\u94A5\u548C\u79C1\u94A5\uFF09</p><div class="custom-container warning"><p class="custom-container-title">\u5907\u6CE8</p><p>\u5E76\u4E0D\u662F\u53EA\u4F1A\u901A\u8FC7\u516C\u94A5\u52A0\u5BC6\u79C1\u94A5\u89E3\u5BC6\u3002\u5728\u6570\u5B57\u7B7E\u540D\u4E2D\u521A\u597D\u76F8\u53CD\uFF0C\u662F\u901A\u8FC7\u79C1\u94A5\u52A0\u5BC6\u516C\u94A5\u89E3\u5BC6</p></div><h2 id="rsa" tabindex="-1"><a class="header-anchor" href="#rsa" aria-hidden="true">#</a> RSA</h2><p><code>RSA</code>\u662F\u975E\u5BF9\u79F0\u52A0\u5BC6\u4E2D\u6BD4\u8F83\u5E38\u7528\u7684\u65B9\u5F0F</p><h2 id="\u6570\u5B57\u7B7E\u540D" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B57\u7B7E\u540D" aria-hidden="true">#</a> \u6570\u5B57\u7B7E\u540D</h2><p>\u6570\u5B57\u7B7E\u540D\u662F\u4E00\u4E2A\u5E26\u6709\u5BC6\u94A5\u7684\u6D88\u606F\u6458\u8981\u7B97\u6CD5\uFF0C\u8FD9\u4E2A\u5BC6\u94A5\u5305\u62EC\u4E86\u516C\u94A5\u548C\u79C1\u94A5\uFF0C\u7528\u4E8E\u9A8C\u8BC1\u6570\u636E\u5B8C\u6574\u6027\u3001\u8BA4\u8BC1\u6570\u636E\u6765\u6E90\u548C\u6297\u5426\u8BA4\uFF0C\u9075\u5FAAOSI\u53C2\u8003\u6A21\u578B\u3001<code>\u79C1\u94A5\u7B7E\u540D</code>\u548C<code>\u516C\u94A5\u9A8C\u8BC1</code>\u3002\u4E5F\u662F\u975E\u5BF9\u79F0\u52A0\u5BC6\u7B97\u6CD5\u548C\u6D88\u606F\u6458\u8981\u7B97\u6CD5\u7684\u7ED3\u5408\u4F53\uFF0C\u5E38\u89C1\u7684\u6570\u5B57\u7B7E\u540D\u7B97\u6CD5\u4E3B\u8981\u6709RSA\u3001DSA\u3001ECDSA\u4E09\u79CD\uFF0C\u672C\u6587\u5BF9\u6570\u5B57\u7B7E\u540D\u7B97\u6CD5\u8FDB\u884C\u8BE6\u7EC6\u4ECB\u7ECD\u3002</p><p><img src="'+a+`" alt="\u6570\u5B57\u7B7E\u540D" title="\u6570\u5B57\u7B7E\u540D"></p><p>\u751F\u6210\u5BC6\u94A5\u5BF9</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// Get public key and private key.</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token punctuation">(</span><span class="token keyword">string</span> privateKey<span class="token punctuation">,</span> <span class="token keyword">string</span> publicKey<span class="token punctuation">)</span></span> <span class="token function">GetKeyFromContainer</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> containerName<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F\u5206\u5F00\u751F\u6210\u516C\u94A5\u548C\u79C1\u94A5\uFF0C\u901A\u8FC7\u6307\u5B9A\u76F8\u540C\u7684containerName\u4FDD\u6301\u4E00\u81F4\u6027</span>
    <span class="token comment">// \u5982\u679C\u662F\u540C\u65F6\u751F\u6210\u516C\u94A5\u548C\u79C1\u94A5\uFF0C\u53EF\u4EE5\u4E0D\u63D0\u4F9B&lt;seealso cref=&quot;CspParameters&quot;/&gt;\u53C2\u6570</span>
    <span class="token comment">//var cp = new CspParameters</span>
    <span class="token comment">//{</span>
    <span class="token comment">//    KeyContainerName = containerName</span>
    <span class="token comment">//};</span>
    <span class="token comment">//var rsa = new RSACryptoServiceProvider(cp);</span>

    <span class="token class-name"><span class="token keyword">var</span></span> rsa <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RSACryptoServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>rsa<span class="token punctuation">.</span><span class="token function">ToXmlString</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rsa<span class="token punctuation">.</span><span class="token function">ToXmlString</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token function">EncryptHash</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> privateKey<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> fileHash<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> rsa <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RSACryptoServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rsa<span class="token punctuation">.</span><span class="token function">FromXmlString</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> rsaFormatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RSAPKCS1SignatureFormatter</span><span class="token punctuation">(</span>rsa<span class="token punctuation">)</span><span class="token punctuation">;</span>
    rsaFormatter<span class="token punctuation">.</span><span class="token function">SetHashAlgorithm</span><span class="token punctuation">(</span><span class="token string">&quot;MD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> rsaFormatter<span class="token punctuation">.</span><span class="token function">CreateSignature</span><span class="token punctuation">(</span>fileHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">DecryptHash</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> publicKey<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> fileHash<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> electronicSignature<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> rsa <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RSACryptoServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rsa<span class="token punctuation">.</span><span class="token function">FromXmlString</span><span class="token punctuation">(</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> rsaDeformatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RSAPKCS1SignatureDeformatter</span><span class="token punctuation">(</span>rsa<span class="token punctuation">)</span><span class="token punctuation">;</span>
    rsaDeformatter<span class="token punctuation">.</span><span class="token function">SetHashAlgorithm</span><span class="token punctuation">(</span><span class="token string">&quot;MD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> rsaDeformatter<span class="token punctuation">.</span><span class="token function">VerifySignature</span><span class="token punctuation">(</span>fileHash<span class="token punctuation">,</span> electronicSignature<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,12);function e(c,o){return t}var u=s(p,[["render",e]]);export{u as default};
